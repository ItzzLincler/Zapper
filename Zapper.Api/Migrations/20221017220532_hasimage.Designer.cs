// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Zapper.Api.Data;

#nullable disable

namespace Zapper.Api.Migrations
{
    [DbContext(typeof(ScrapedProductsContext))]
    [Migration("20221017220532_hasimage")]
    partial class hasimage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Zapper.Api.Models.ProductPriceChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Changed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("CurrentPrice")
                        .HasColumnType("double precision");

                    b.Property<double?>("PreviousPrice")
                        .HasColumnType("double precision");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("ProductPriceChanges");
                });

            modelBuilder.Entity("Zapper.Api.Models.ScrapedProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("CurrentPrice")
                        .HasColumnType("double precision");

                    b.Property<bool>("HasImage")
                        .HasColumnType("boolean");

                    b.Property<double?>("HighestPrice")
                        .HasColumnType("double precision");

                    b.Property<string>("ImageUri")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastChecked")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("LowestPrice")
                        .HasColumnType("double precision");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductSource")
                        .HasColumnType("integer");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ScrapedProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
